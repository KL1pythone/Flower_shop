import requests
import json

def get_access_token():
    url = 'https://cvetoot.posiflora.com/api/v1/sessions'
    payload = {
        "data": {
            "type": "sessions",
            "attributes": {
                "username": "cvetoot",
                "password": "wowtDCx7"
            }
        }
    }
    response = requests.post(url, json=payload)
    return response.json()['data']['attributes']['accessToken']

def get_last_orders(headers, limit=10):
    url = f"https://cvetoot.posiflora.com/api/v1/orders?page[size]={limit}&filter[statuses]=done"
    response = requests.get(url, headers=headers)
    return response.json()

def get_customer_bonus(customer_id, headers):
    if not customer_id:
        return None
    url = f"https://cvetoot.posiflora.com/api/v1/customers/{customer_id}"
    response = requests.get(url, headers=headers)
    return response.json()['data']['attributes'].get('currentPoints')

def process_orders(orders_data, headers):
    results = []
    for order in orders_data['data']:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–µ
            if not order.get('relationships', {}).get('customer', {}).get('data'):
                print(f"‚ö†Ô∏è –í –∑–∞–∫–∞–∑–µ {order['id']} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ")
                continue
                
            customer_id = order['relationships']['customer']['data']['id']
            
            # –ü–æ–ª—É—á–∞–µ–º –±–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ã
            bonus = get_customer_bonus(customer_id, headers)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            result = {
                "order_id": order['id'],
                "customer_id": customer_id,
                "bonus_points": bonus,
                "total_amount": order['attributes']['totalAmount'],
                "date": order['attributes']['date']
            }
            results.append(result)
            print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω –∑–∞–∫–∞–∑ {order['id']}")
            
        except KeyError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞ {order.get('id', 'unknown')}: {str(e)}")
        except Exception as e:
            print(f"üö® –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞: {str(e)}")
    
    return results

def main():
    try:
        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        token = get_access_token()
        headers = {
            "Authorization": f"Bearer {token}",
            "Content-Type": "application/json"
        }
        
        # –ü–æ–ª—É—á–∞–µ–º 10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤
        print("üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤...")
        orders_data = get_last_orders(headers)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–∫–∞–∑—ã
        print("üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤...")
        processed_data = process_orders(orders_data, headers)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        with open('json_test.json', 'w', encoding='utf-8') as f:
            json.dump(processed_data, f, indent=2, ensure_ascii=False)
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ json_test.json")
    
    except Exception as e:
        print(f"üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

if __name__ == "__main__":
    main()